
http://162.55.220.72:5005/first
#1. Отправить запрос
		Get  http://162.55.220.72:5005/first
#2. Статус код 200
	
		pm.test("Check status code is 200", function () {
    		pm.response.to.have.status(200);
		});

#3. Проверить, что в body приходит правильный string:
		The body result:"This is the first responce from server!"


http://162.55.220.72:5005/user_info_3
# 1. Отправить запрос:

  		Post http://162.55.220.72:5005/user_info_3

#2. Статус код 200:

  		pm.test("Check status code is 200", function () {
    		pm.response.to.have.status(200);
		});

#3. Спарсить response body в json:

	var jsonData = pm.response.json();
	
#4. Проверить, что name в ответе равно name s request (name вбить руками.)

	pm.test("Check name", function () {
    	var jsonData = pm.response.json();
    	pm.expect(jsonData.name).to.eql("Kristina");

#5. Проверить, что age в ответе равно age s request (age вбить руками.):

	pm.test("Check age", function () {
    	var jsonData = pm.response.json();
   	 pm.expect(jsonData.age).to.eql(23);
	});


#6. Проверить, что salary в ответе равно salary s request (salary вбить руками.):

	pm.test("Check salary", function () {
    	var jsonData = pm.response.json();
    	pm.expect(jsonData.salary).to.eql(1000);
	});

#7. Спарсить request:

	var reqBody = request.data;

#8. Проверить, что name в ответе равно name s request (name забрать из request.):
    
	var reqBody = request.data;
	var jsonData = pm.response.json();
	pm.test("Check your name", function () {
    	pm.expect(jsonData.name).to.eql(reqBody.name);
 	});


#9. Проверить, что age в ответе равно age s request (age забрать из request.)

	
    	var reqBody = request.data;
	var jsonData = pm.response.json();
	pm.test("Check your age", function () {
    	pm.expect(jsonData.age).to.eql(reqBody.age);
 	});


#10. Проверить, что salary в ответе равно salary s request (salary забрать из request.) - 

	var reqBody = request.data;
	var jsonData = pm.response.json();
	pm.test("Check your salary", function () {
    	pm.expect(jsonData.salary).to.eql(parseInt(reqBody.salary));
 	});

#11. Вывести в консоль параметр family из response:
 	
	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

#12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)

	var jsonData = pm.response.json();
	var reqBody = request.data;

	pm.test("Check u_salary_1_5_year = salary*4 ", function () {
	pm.expect(jsonData.family.u_salary_1_5_year).to.eql (reqBody.salary*4);
	});


http://162.55.220.72:5005/object_info_3
#1. Отправить запрос.

	Get http://162.55.220.72:5005/object_info_3?name=Kris&age=29&salary=1000

#2. Статус код 200

	pm.test("Check status code is 200", function () {
    	pm.response.to.have.status(200);
	});

#3. Спарсить response body в json.

    	var jsonData = pm.response.json();
    	
#4. Спарсить request.

	var reqBody = (request.data);

#5. Проверить, что name в ответе равно name s request (name забрать из request.) - 

	var jsonData = pm.response.json();
	var reqBody = (request.data);
    	pm.test("Check name", function () {
        pm.expect(jsonData.name).to.eql('Kris');
    });

#6. Проверить, что age в ответе равно age s request (age забрать из request.) - 

	var jsonData = pm.response.json();
	var reqBody = (request.data);
    	pm.test("Check age", function () {
        pm.expect(jsonData.age).to.eql("29");
    });


#7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)

	var jsonData = pm.response.json();
	var reqBody = (request.data);
    		pm.test("Check salary", function () {
        	pm.expect(jsonData.salary).to.eql(1000);
    		});


#8. Вывести в консоль параметр family из response.

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

#9. Проверить, что у параметра dog есть параметры name.

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

    pm.test("Check the dog has name", function () {
    pm.expect(resp.pets.dog).to.property("name");
	});

#10. Проверить, что у параметра dog есть параметры age:

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

    pm.test("Check the dog has age", function () {
    pm.expect(resp.pets.dog).to.property("age");
	});

#11. Проверить, что параметр name имеет значение Luky:

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

    pm.test("Check dog's name Lucky ", function () {
    pm.expect(resp.pets.dog.name).to.eql("Luky");
});


#12. Проверить, что параметр age имеет значение 4.


	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var resp = jsonData.family;
	console.log('resp = ' , resp)

    pm.test("Check dog's age", function () {
    pm.expect(resp.pets.dog.age).to.eql(4);
});


http://162.55.220.72:5005/object_info_4
#1. Отправить запрос:

	http://162.55.220.72:5005/object_info_4?name=Kris&age=29&salary=2000

#2. Статус код 200:

	pm.test("Check status code is 200", function () {
    	pm.response.to.have.status(200);
	});

#3. Спарсить response body в json:

    	var jsonData = JSON.parse;
    	
#4. Спарсить request:

	var reqBody = request.data;

#5. Проверить, что name в ответе равно name s request (name забрать из request.)


	var jsonData = pm.response.json();
	var reqBody = (request.data);

	pm.test("Check name", function () {
    	pm.expect(jsonData.name).to.eql("Kris");
	});

#6. Проверить, что age в ответе равно age из request (age забрать из request.)

	
	var jsonData = pm.response.json();
	var reqBody = (request.data);

	pm.test("Check age", function () {
    	pm.expect(jsonData.age).to.eql(29);
	});

#7. Вывести в консоль параметр salary из request.

	var salary = jsonData.salary
	console.log('salary =' + salary)
	

#8. Вывести в консоль параметр salary из response.

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var salary = reqBody.salary
	console.log('salary =' + salary)

#9. Вывести в консоль 0-й элемент параметра salary из response.

	var jsonData = pm.response.json();
	var reqBody = (request.data);
	var salary = 1*jsonData.salary[0]
	console.log('salary =' + salary)


	pm.test("Your salary", function () {
    	pm.expect(jsonData.salary[0]).to.eql(2000);
	});

#10. Вывести в консоль 1-й элемент параметра salary параметр salary из response:

		var jsonData = pm.response.json();
		var reqBody = (request.data);
		var salary = 1*jsonData.salary[1]
		console.log('salary =' + salary)


		pm.test("Your salary", function () {
   		pm.expect(salary).to.eql(4000);
		});

#11. Вывести в консоль 2-й элемент параметра salary параметр salary из response:


		var jsonData = pm.response.json();
		var reqBody = (request.data);
		var salary = +jsonData.salary[2]
		console.log('salary =' + salary)


		pm.test("Your salary", function () {
   		pm.expect(salary).to.eql(6000);
		});


#12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.):-????

	
	var jsonData = JSON.parse(responseBody);
	var reqBody = (request.data);
	var salary = jsonData.salary[0]


	pm.test("Check resp_salary[0]=req_salary", function () {
   	pm.expect(salary).to.eql(request.data.salary);
	});

#13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.):

	var jsonData = JSON.parse(responseBody);
	var reqBody = request.data
	var salary = 1*jsonData.salary[1]
	console.log(salary)

	pm.test("Check salary[1]=salary*2", function () {
   	pm.expect(salary).to.eql(reqBody.salary*2);
	});



#14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.):

	var jsonData = JSON.parse(responseBody);
	var reqBody = request.data
	var salary = 1*jsonData.salary[2]
	console.log(salary)

	pm.test("salary[2]=salary*3", function () {
   	pm.expect(salary).to.eql(reqBody.salary*3);
	});


#15. Создать в окружении переменную name:

		Environments - Group_26 - Variable name_1

#16. Создать в окружении переменную age:

	Environments - Group_26 - Variable age_1


#17. Создать в окружении переменную salary

	Environments - Group_26 - Variable salary_1

#18. Передать в окружение переменную name:

	var jsonData = JSON.parse(responseBody);
	var name  = jsonData.name;
	console.log('name =' + name)


		pm.test("set name", function () {
   		pm.expect(name).to.eql('Kris');
		});

	pm.environment.set("name_1", name);
	

#19. Передать в окружение переменную age 

	var jsonData = JSON.parse(responseBody);
	var age = jsonData.age;
	console.log('age =' + age)


		pm.test("set age", function () {
   		pm.expect(age).to.eql(28);
		});

	pm.environment.set("age_1", age);



#20. Передать в окружение переменную salary
  
	var jsonData = JSON.parse(responseBody);
	var salary = 1*jsonData.salary[1];
	console.log('salary =' + salary)


		pm.test("set salary", function () {
   		pm.expect(salary).to.eql(4000);
		});

		pm.environment.set("salary_1", salary);



#21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary:
 	var json_resp = JSON.parse(responseBody);
	var salary = json_resp.salary


	for (var i=0; i < salary.length; i++){
    	console.log("salary_" + i + ":" +salary[i])

	}	

http://162.55.220.72:5005/user_info_2
#1. Вставить параметр salary из окружения в request:

	Body - set {{salary}} in value 
	
#2. Вставить параметр age из окружения в age:

	Body - set {{age}} in value

#3. Вставить параметр name из окружения в name:

	Body - set{{name}} in value

#4. Отправить запрос:

	Post http://162.55.220.72:5005/user_info_2

#5. Статус код 200

	pm.test("Check status code is 200", function () {
    	pm.response.to.have.status(200);
	});

#6. Спарсить response body в json:

	var resp = JSON.parse(responseBody);

#7. Спарсить request:

	var req = request.data;

#8. Проверить, что json response имеет параметр start_qa_salary:
 
	var resp = JSON.parse(responseBody);
	var req = request.data
	var salary = resp.start_qa_salary	
	console.log("salary = " + salary)
	pm.test("Your test name", function () {
     	pm.expect(resp.start_qa_salary).to.eql(4000);
	});
	

#9. Проверить, что json response имеет параметр qa_salary_after_6_months:


	var resp = JSON.parse(responseBody);
	var req = request.data
	var salary = resp.qa_salary_after_6_months	
	console.log("salary = " + salary)
	pm.test("Your test name", function () {
     	pm.expect(resp.qa_salary_after_6_months).to.eql(8000);
	});
	

#10. Проверить, что json response имеет параметр qa_salary_after_12_months:

	var resp = JSON.parse(responseBody);
	var req = request.data
	var salary = resp.qa_salary_after_12_months	
	console.log("salary = " + salary)

	pm.test("Your test name", function () {
     	pm.expect(resp.qa_salary_after_12_months).to.eql(10800.0);
	});
	


#11. Проверить, что json response имеет параметр qa_salary_after_1.5_year

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp["qa_salary_after_1.5_year"]
	console.log("salary = " + salary)

	pm.test("Check qa_salary_after_1.5_year", function () {
     	pm.expect(salary).to.eql(13200.0);
	});
	


#12. Проверить, что json response имеет параметр qa_salary_after_3.5_years: 

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp["qa_salary_after_3.5_year"]
	console.log("salary = " + salary)

	pm.test("Check qa_salary_after_3.5_year", function () {
     	pm.expect(salary).to.eql(15200.0);
	});
	

#13. Проверить, что json response имеет параметр person:
		var resp = JSON.parse(responseBody);
		var req = request.data
		var person = resp.person
		console.log("person = ", person)
		pm.test("Your test name", function () {
    		pm.expect(resp.person.u_age).to.eql(29);
		});


#14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.):- 

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp.start_qa_salary
	console.log("salary = " + salary)

	pm.test("Check start_qa_salary = salary from request", function () {
     	pm.expect(salary).to.eql(parseInt(req.salary));
	});

#15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.):


	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp.qa_salary_after_6_months
	console.log("salary = " + salary)

	pm.test("qa_salary_after_6_months = salary*2 from request", function () {
     	pm.expect(salary).to.eql(req.salary*2);
	});

#16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.):

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp.qa_salary_after_12_months
	console.log("salary = " + salary)

	pm.test("qa_salary_after_12_months =salary*2.7 from request", function () {
     	pm.expect(salary).to.eql(req.salary*2.7);
	});


#17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.):

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp["qa_salary_after_1.5_year"]
	console.log("salary = " + salary)

	pm.test("qa_salary_after_1.5_year равен salary*3.3", function () {
     	pm.expect(salary).to.eql(req.salary*3.3);
	});


#18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.):


	var resp = JSON.parse(responseBody);
	var req = request.data;
	var salary = resp["qa_salary_after_3.5_year"]
	console.log("salary = " + salary)

	pm.test("qa_salary_after_3.5_year = salary*3.3", function () {
     	pm.expect(salary).to.eql(req.salary*3.8);
	});



#19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.):

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var person  = resp.person
	console.log("person = " , person)

	pm.test("1-й элемент из u_name = salary ", function () {
     	pm.expect(person.u_name[1]).to.eql(parseInt(req.salary));
	});


#20. Проверить, что что параметр u_age равен age из request (age забрать из request.): 


	var resp = JSON.parse(responseBody);
	var req = request.data;
	var person  = resp.person
	console.log("person = " , person)

	pm.test("u_age = age fromrequest ", function () {
     	pm.expect(person.u_age).to.eql(parseInt(req.age));
	});

 	

#21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.):

	var resp = JSON.parse(responseBody);
	var req = request.data;
	var person  = resp.person
	console.log("person = " , person)

	pm.test("u_salary_5_years равен salary*4.2", function () {
     	pm.expect(person.u_salary_5_years).to.eql(req.salary*4.2);
	});
